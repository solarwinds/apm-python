[build-system]
requires = [
  "setuptools >= 61.0",
  "wheel >= 0.41"
]
build-backend = "setuptools.build_meta"

[project]
name = "solarwinds_apm"
dynamic = ["version"]
authors = [
  {name = "SolarWinds, LLC", email = "SWO-support@solarwinds.com"}
]
maintainers = [
  {name = "Tammy Baylis", email = "tammy.baylis@solarwinds.com"}
]
description = "OpenTelemetry custom distro to connect to SolarWinds"
readme = {file = "README.md", content-type = "text/markdown"}
license = {file = "LICENSE"}
keywords = [
  "solarwinds_apm",
  "appoptics_apm",
  "traceview",
  "tracelytics",
  "oboe",
  "instrumentation",
  "performance",
  "opentelemetry",
  "observability",
]
classifiers = [
    "Typing :: Typed",
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "Intended Audience :: Information Technology",
]
requires-python = ">=3.9"
dependencies = [
    'opentelemetry-api == 1.36.0',
    'opentelemetry-sdk == 1.36.0',
    'opentelemetry-exporter-otlp == 1.36.0',
    'opentelemetry-instrumentation == 0.57b0',
    'opentelemetry-instrumentation-logging == 0.57b0',
    'opentelemetry-sdk-extension-aws == 2.1.0',
    'opentelemetry-resource-detector-azure == 0.1.5',
    'opentelemetry-resource-detector-containerid == 0.57b0',
]

[project.urls]
Homepage = "https://www.solarwinds.com/solarwinds-observability/use-cases/python-performance-monitoring"
Download = "https://pypi.org/project/solarwinds-apm/"
Documentation = "https://documentation.solarwinds.com/en/success_center/observability/content/configure/services/python/python.htm"
Changelog = "https://documentation.solarwinds.com/en/success_center/observability/content/release_notes/python-release-notes.htm"

[project.entry-points.opentelemetry_distro]
solarwinds_distro = "solarwinds_apm.distro:SolarWindsDistro"

[project.entry-points.opentelemetry_configurator]
solarwinds_configurator = "solarwinds_apm.configurator:SolarWindsConfigurator"

[project.entry-points.opentelemetry_propagator]
solarwinds_propagator = "solarwinds_apm.propagator:SolarWindsPropagator"

[project.entry-points.opentelemetry_traces_sampler]
solarwinds_sampler = "solarwinds_apm.sampler:ParentBasedSwSampler"

[project.entry-points.opentelemetry_resource_detector]
uams = "solarwinds_apm.uams:UamsResourceDetector"
k8s = "solarwinds_apm.k8s:K8sResourceDetector"

[tool.setuptools]
license-files = ["LICENSE"]
include-package-data = false
packages = [
  "solarwinds_apm",
  "solarwinds_apm.api",
  "solarwinds_apm.oboe",
  "solarwinds_apm.semconv",
  "solarwinds_apm.semconv.trace",
  "solarwinds_apm.trace",
]

[tool.setuptools.dynamic]
version = {attr = "solarwinds_apm.version.__version__"}

[tool.black]
line-length = 79
exclude = '''
(
  /(  # generated files
    .tox|
    build|
    scripts|
    tests
  )/
)
'''

[tool.ruff]
line-length = 79
exclude = [
    ".tox",
    "build", 
    "scripts",
    "tests",
    "__pycache__",
]

[tool.ruff.lint]
# To match .flake8 config
select = [
    "E",
    "W",
    "F",
    "I",
    "N",
    "UP",
    "B",
    "C4",
    "PIE",
    "SIM",
]
ignore = [
    "E501",
    "E203",
    "B008",  # for Resource.create() test compatibility
    "UP006", # Use `set` instead of `typing.Set` type annotation, for compatibility with upstream SDK state
]

[tool.ruff.lint.isort]
known-first-party = ["solarwinds_apm"]
force-single-line = false

[tool.ruff.format]
# To match black config
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"
