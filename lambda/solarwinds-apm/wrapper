#!/bin/bash

# Â© 2024 SolarWinds Worldwide, LLC. All rights reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License. You may obtain a copy of the License at:http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.

: <<'END_DOCUMENTATION'
`solarwinds-apm/wrapper`

Configures OpenTelemetry Python environment variables and sets handler-related
variables for lambda function auto-instrumentation (`opentelemetry-instrument`).

Please set the AWS Lambda function configuration with this:

.. code::

    AWS_LAMBDA_EXEC_WRAPPER = /opt/solarwinds-apm/wrapper

END_DOCUMENTATION


# Update Lambda PYTHONPATH for auto-instrumentation
# using previously installed instrumentors and SDK packages
export LAMBDA_LAYER_PKGS_DIR="/opt/python";
export PYTHONPATH="$LAMBDA_LAYER_PKGS_DIR:$PYTHONPATH";
export PYTHONPATH="$LAMBDA_RUNTIME_DIR:$PYTHONPATH";

# Default OTEL_EXPORTER_OTLP_PROTOCOL for APM Python in lambda
if [ -z "${OTEL_EXPORTER_OTLP_PROTOCOL}" ]; then
    export OTEL_EXPORTER_OTLP_PROTOCOL=http/protobuf
fi

# Lambda function is default service name
if [ -z "${OTEL_SERVICE_NAME}" ]; then
    export OTEL_SERVICE_NAME=$AWS_LAMBDA_FUNCTION_NAME;
fi

# Set faas.instance resource attribute to expose log stream name.
# Currently we ignore any configured OTEL_RESOURCE_ATTRIBUTES.
export OTEL_RESOURCE_ATTRIBUTES="faas.instance=$AWS_LAMBDA_LOG_STREAM_NAME";

# From OpenTelemetry Python:
# - Use a wrapper because AWS Lambda's `python3 /var/runtime/bootstrap.py` will
#   use `imp.load_module` to load the function from the `_HANDLER` environment
#   variable. This RELOADS the module and REMOVES any instrumentation patching
#   done earlier. So we delay instrumentation until `bootstrap.py` imports
#   `otel_wrapper.py` at which we know the patching will be picked up.
#
#   See more:
#   https://docs.python.org/3/library/imp.html#imp.load_module
export ORIG_HANDLER=$_HANDLER;
export _HANDLER="otel_wrapper.lambda_handler";

# Run with upstream auto-instrumentation entry point script
exec python3 $LAMBDA_LAYER_PKGS_DIR/bin/opentelemetry-instrument "$@"
