name: Verify Installation

on:
  workflow_dispatch:
    inputs:
      install-registry:
        required: true
        description: 'Registry used for install tests, e.g. pypi, testpypi, packagecloud'
        type: choice
        default: 'pypi'
        options:
        - pypi
        - packagecloud
        - testpypi
      solarwinds-version:
        required: false
        description: 'Optional solarwinds-apm version, e.g. 0.0.3.2'

env:
  SOLARWINDS_APM_VERSION: ${{ github.event.inputs.solarwinds-version }}
  SW_APM_COLLECTOR_AO_PROD: ${{ secrets.SW_APM_COLLECTOR_AO_PROD }}
  SW_APM_COLLECTOR_PROD: ${{ secrets.SW_APM_COLLECTOR_PROD }}
  SW_APM_COLLECTOR_STAGING: ${{ secrets.SW_APM_COLLECTOR_STAGING }}
  SW_APM_SERVICE_KEY_AO_PROD: ${{ secrets.SW_APM_SERVICE_KEY_AO_PROD }}
  SW_APM_SERVICE_KEY_PROD: ${{ secrets.SW_APM_SERVICE_KEY_PROD }}
  SW_APM_SERVICE_KEY_STAGING: ${{ secrets.SW_APM_SERVICE_KEY_STAGING }}

jobs:
  #--------------------------------------------------------------------
  # Python 3.7
  #--------------------------------------------------------------------

  py37_install_debian9:
    runs-on: ubuntu-latest
    container:
      image: python:3.7-stretch
      options: --hostname py3.7-debian9
    steps:
    - uses: actions/checkout@v2
    - name: Setup and run install test
      working-directory: ./tests/docker/install
      run: ./_helper_run_install_tests.sh
      shell: sh
      env:
        MODE: ${{ github.event.inputs.install-registry }}

  py37_install_debian10:
    runs-on: ubuntu-latest
    container:
      image: python:3.7-buster
      options: --hostname py3.7-debian10
    steps:
    - uses: actions/checkout@v2
    - name: Setup and run install test
      working-directory: ./tests/docker/install
      run: ./_helper_run_install_tests.sh
      shell: sh
      env:
        MODE: ${{ github.event.inputs.install-registry }}

  py37_install_ubuntu1804:
    runs-on: ubuntu-latest
    container:
      image: ubuntu:18.04
      options: --hostname py3.7-ubuntu18.04
    steps:
    - uses: actions/checkout@v2
    - name: Setup and run install test
      working-directory: ./tests/docker/install
      run: ./_helper_run_install_tests.sh
      shell: sh
      env:
        MODE: ${{ github.event.inputs.install-registry }}

  py37_install_amazon2:
    runs-on: ubuntu-latest
    container:
      image: amazonlinux:2
      options: --hostname py3.7-install-amazon2
    steps:
    - name: Install latest git and tar
      run: |
        yum update -y
        yum install -y git tar
    - uses: actions/checkout@v2
    - name: Setup and run install test
      working-directory: ./tests/docker/install
      run: ./_helper_run_install_tests.sh
      shell: sh
      env:
        MODE: ${{ github.event.inputs.install-registry }}

  py37_install_alpine313:
    runs-on: ubuntu-latest
    container:
      image: python:3.7-alpine3.13
      options: --hostname py3.7-alpine3.13
    steps:
    - uses: actions/checkout@v2
    - name: Setup and run install test
      working-directory: ./tests/docker/install
      run: ./_helper_run_install_tests.sh
      shell: sh
      env:
        MODE: ${{ github.event.inputs.install-registry }}

  #--------------------------------------------------------------------
  # Python 3.8
  #--------------------------------------------------------------------

  py38_install_debian10:
    runs-on: ubuntu-latest
    container:
      image: python:3.8-buster
      options: --hostname py3.8-debian10
    steps:
    - uses: actions/checkout@v2
    - name: Setup and run install test
      working-directory: ./tests/docker/install
      run: ./_helper_run_install_tests.sh
      shell: sh
      env:
        MODE: ${{ github.event.inputs.install-registry }}

  py38_install_ubuntu1804:
    runs-on: ubuntu-latest
    container:
      image: ubuntu:18.04
      options: --hostname py3.8-ubuntu18.04
    steps:
    - uses: actions/checkout@v2
    - name: Setup and run install test
      working-directory: ./tests/docker/install
      run: ./_helper_run_install_tests.sh
      shell: sh
      env:
        MODE: ${{ github.event.inputs.install-registry }}

  py38_install_ubuntu2004:
    runs-on: ubuntu-latest
    container:
      image: ubuntu:20.04
      options: --hostname py3.8-ubuntu20.04
    steps:
    - uses: actions/checkout@v2
    - name: Setup and run install test
      working-directory: ./tests/docker/install
      run: ./_helper_run_install_tests.sh
      shell: sh
      env:
        MODE: ${{ github.event.inputs.install-registry }}

  py38_install_amazon201803:
    runs-on: ubuntu-latest
    container:
      image: amazonlinux:2018.03
      options: --hostname py3.8-amazon2018.03
    steps:
    - uses: actions/checkout@v2
    - name: Setup and run install test
      working-directory: ./tests/docker/install
      run: ./_helper_run_install_tests.sh
      shell: sh
      env:
        MODE: ${{ github.event.inputs.install-registry }}

  py38_install_alpine313:
    runs-on: ubuntu-latest
    container:
      image: python:3.8-alpine3.13
      options: --hostname py3.8-alpine3.13
    steps:
    - uses: actions/checkout@v2
    - name: Setup and run install test
      working-directory: ./tests/docker/install
      run: ./_helper_run_install_tests.sh
      shell: sh
      env:
        MODE: ${{ github.event.inputs.install-registry }}

  #--------------------------------------------------------------------
  # Python 3.9
  #--------------------------------------------------------------------

  py39_install_debian10:
    runs-on: ubuntu-latest
    container:
      image: python:3.9-buster
      options: --hostname py3.9-debian10
    steps:
    - uses: actions/checkout@v2
    - name: Setup and run install test
      working-directory: ./tests/docker/install
      run: ./_helper_run_install_tests.sh
      shell: sh
      env:
        MODE: ${{ github.event.inputs.install-registry }}

  py39_install_ubuntu2004:
    runs-on: ubuntu-latest
    container:
      image: ubuntu:20.04
      options: --hostname py3.9-ubuntu20.04
    steps:
    - uses: actions/checkout@v2
    - name: Setup and run install test
      working-directory: ./tests/docker/install
      run: ./_helper_run_install_tests.sh
      shell: sh
      env:
        MODE: ${{ github.event.inputs.install-registry }}

  py39_install_centos8:
    runs-on: ubuntu-latest
    container:
      image: centos:8
      options: --hostname py3.9-centos8
    steps:
    - uses: actions/checkout@v2
    - name: Setup and run install test
      working-directory: ./tests/docker/install
      run: ./_helper_run_install_tests.sh
      shell: sh
      env:
        MODE: ${{ github.event.inputs.install-registry }}

  py39_install_alpine313:
    runs-on: ubuntu-latest
    container:
      image: python:3.9-alpine3.13
      options: --hostname py3.9-alpine3.13
    steps:
    - uses: actions/checkout@v2
    - name: Setup and run install test
      working-directory: ./tests/docker/install
      run: ./_helper_run_install_tests.sh
      shell: sh
      env:
        MODE: ${{ github.event.inputs.install-registry }}

  py39_install_alpine316:
    runs-on: ubuntu-latest
    container:
      image: python:3.9-alpine3.16
      options: --hostname py3.9-alpine3.16
    steps:
    - uses: actions/checkout@v2
    - name: Setup and run install test
      working-directory: ./tests/docker/install
      run: ./_helper_run_install_tests.sh
      shell: sh
      env:
        MODE: ${{ github.event.inputs.install-registry }}

  #--------------------------------------------------------------------
  # Python 3.10
  #--------------------------------------------------------------------

  py310_install_debian10:
    runs-on: ubuntu-latest
    container:
      image: python:3.10-buster
      options: --hostname py3.10-debian10
    steps:
    - uses: actions/checkout@v2
    - name: Setup and run install test
      working-directory: ./tests/docker/install
      run: ./_helper_run_install_tests.sh
      shell: sh
      env:
        MODE: ${{ github.event.inputs.install-registry }}

  py310_install_ubuntu2004:
    runs-on: ubuntu-latest
    container:
      image: ubuntu:20.04
      options: --hostname py3.10-ubuntu20.04
    steps:
    - uses: actions/checkout@v2
    - name: Setup and run install test
      working-directory: ./tests/docker/install
      run: ./_helper_run_install_tests.sh
      shell: sh
      env:
        MODE: ${{ github.event.inputs.install-registry }}

  py310_install_alpine313:
    runs-on: ubuntu-latest
    container:
      image: python:3.10-alpine3.13
      options: --hostname py3.10-alpine3.13
    steps:
    - uses: actions/checkout@v2
    - name: Setup and run install test
      working-directory: ./tests/docker/install
      run: ./_helper_run_install_tests.sh
      shell: sh
      env:
        MODE: ${{ github.event.inputs.install-registry }}

  py310_install_alpine316:
    runs-on: ubuntu-latest
    container:
      image: python:3.10-alpine3.16
      options: --hostname py3.10-alpine3.16
    steps:
    - uses: actions/checkout@v2
    - name: Setup and run install test
      working-directory: ./tests/docker/install
      run: ./_helper_run_install_tests.sh
      shell: sh
      env:
        MODE: ${{ github.event.inputs.install-registry }}

  #--------------------------------------------------------------------
  # Python 3.11
  #--------------------------------------------------------------------

  py311_install_debian10:
    runs-on: ubuntu-latest
    container:
      image: python:3.11-rc-buster
      options: --hostname py3.11-debian10
    steps:
    - uses: actions/checkout@v2
    - name: Setup and run install test
      working-directory: ./tests/docker/install
      run: ./_helper_run_install_tests.sh
      shell: sh
      env:
        MODE: ${{ github.event.inputs.install-registry }}

  py311_install_ubuntu2004:
    runs-on: ubuntu-latest
    container:
      image: ubuntu:20.04
      options: --hostname py3.11-ubuntu20.04
    steps:
    - uses: actions/checkout@v2
    - name: Setup and run install test
      working-directory: ./tests/docker/install
      run: ./_helper_run_install_tests.sh
      shell: sh
      env:
        MODE: ${{ github.event.inputs.install-registry }}

  py311_install_alpine316:
    runs-on: ubuntu-latest
    container:
      image: python:3.11-rc-alpine3.16
      options: --hostname py3.11-alpine3.16
    steps:
    - uses: actions/checkout@v2
    - name: Setup and run install test
      working-directory: ./tests/docker/install
      run: ./_helper_run_install_tests.sh
      shell: sh
      env:
        MODE: ${{ github.event.inputs.install-registry }}
