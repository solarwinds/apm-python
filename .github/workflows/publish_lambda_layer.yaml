# Â© 2023 SolarWinds Worldwide, LLC. All rights reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License. You may obtain a copy of the License at:http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.

name: "Workflow call: Publish Lambda Layer"

on:
  workflow_call:
    inputs:
      artifact-name:
        description: 'Name of actions/upload-artifact result'
        required: true
        type: string
      component-version:
        description: 'Version of APM Python library in this release'
        required: true
        type: string
      architecture:
        description: 'Must be x86_64 or arm64'
        required: true
        type: string
      runtimes:
        description: 'Space-delimited list of compatible runtimes'
        required: true
        type: string
      publish-dest:
        description: 'Publish destination, one of: staging, production'
        required: true
        type: string

permissions:
  id-token: write
  contents: read

jobs:
  publish_layer:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        aws_region: 
          - ap-northeast-1
          - ap-northeast-2
          - ap-south-1
          - ap-southeast-1
          - ap-southeast-2
          - ca-central-1
          - eu-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - sa-east-1
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2

    steps:
      - name: Construct Layer Name
        shell: bash
        run: |
          LAYER_NAME=solarwinds-apm-python
          
          if [[ "${{ inputs.architecture }}" != "x86_64" ]] && [[ "${{ inputs.architecture }}" != "arm64" ]] ; then
            echo "ERROR: architecture must be one of x86_64, arm64"
            exit 1
          else
            LAYER_NAME=$LAYER_NAME-${{ inputs.architecture }}
            echo "ARCH=${{ inputs.architecture }}" >> $GITHUB_ENV
          fi
          
          COMPONENT_VERSION_UNDERSCORES=$(echo ${{ inputs.component-version }} | sed -r 's/\./_/g')
          LAYER_NAME=$LAYER_NAME-$COMPONENT_VERSION_UNDERSCORES
          echo "LAYER_NAME=$LAYER_NAME" >> $GITHUB_ENV
          
          echo GITHUB_ENV:
          cat $GITHUB_ENV

      - name: Download built layer
        uses: actions/download-artifact@v4
        with:
          name: ${{ inputs.artifact-name }}

      - if: ${{ inputs.publish-dest == 'staging' }}
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.LAMBDA_PUBLISHER_ARN_STAGING }}
          aws-region: ${{ matrix.aws_region }}

      - if: ${{ inputs.publish-dest == 'production' }}
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.LAMBDA_PUBLISHER_ARN_PRODUCTION }}
          aws-region: ${{ matrix.aws_region }}

      - name: Publish Lambda Layer
        run: |
          aws lambda publish-layer-version \
            --layer-name $LAYER_NAME \
            --license-info "Apache 2.0" \
            --compatible-architectures $ARCH \
            --compatible-runtimes ${{ inputs.runtimes }} \
            --zip-file fileb://${{ inputs.artifact-name }} \
            --query 'LayerVersionArn' \
            --output text

      - name: Make Lambda layer public
        run: |
          LAYER_VERSION=$(
            aws lambda list-layer-versions \
              --layer-name $LAYER_NAME \
              --query 'max_by(LayerVersions, &Version).Version'
          )
          aws lambda add-layer-version-permission \
            --layer-name $LAYER_NAME \
            --version-number $LAYER_VERSION \
            --principal '*' \
            --action lambda:GetLayerVersion \
            --statement-id apm-python-add-permission
