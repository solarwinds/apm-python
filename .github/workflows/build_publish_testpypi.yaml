# Â© 2023 SolarWinds Worldwide, LLC. All rights reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License. You may obtain a copy of the License at:http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.

name: Publish to TestPyPi

on:
  workflow_dispatch:

jobs:
  launch_arm64:
    name: Launch ec2 runners
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.launch.outputs.matrix }}
    steps:
      - uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.CI_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.CI_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      - id: launch
        uses: solarwindscloud/ec2-runner-action@main
        with:
          action: launch
          matrix: |
            x64
            arm64
          github-token: ${{ secrets.CI_GITHUB_TOKEN }}
          runner-user: github
          runner-directory: /gh
          instance-type: t4g.medium
          ami-name: gha-arm64-ubuntu22-.*
          ami-owner: "858939916050"
          subnet-id: subnet-0fd499f8a50e41807
          security-group-ids: sg-0fd8d8cd6effda4a5

  build_publish_sdist_and_wheels:
    name: Build and publish sdist and wheels
    needs:
      - launch_arm64
    runs-on: ${{ matrix.arch == 'arm64' && fromJSON(needs.launch_arm64.outputs.matrix)[matrix.image].label || 'ubuntu-latest' }}
    strategy:
      matrix:
        arch:
          - x64
          - arm64
        image:
          - quay.io/pypa/manylinux_2_28_x86_64:latest
          - quay.io/pypa/manylinux_2_28_aarch64:latest
        include:
          - arch: x64
            image: quay.io/pypa/manylinux_2_28_x86_64:latest
          - arch: arm64
            image: quay.io/pypa/manylinux_2_28_aarch64:latest
    steps:
    - uses: actions/checkout@v3
    - if: ${{ matrix.arch == 'x64' }}
      name: Build sdist and x86_64
      uses: ./.github/actions/package_solarwinds_apm_x86_64
    - if: ${{ matrix.arch == 'arm64' }}
      name: Build aarch64
      uses: ./.github/actions/package_solarwinds_apm_aarch64
    - name: Install Twine
      run: pip install --upgrade --no-cache-dir --prefer-binary twine
    - name: Check distribution artifacts
      run: /gh/.local/bin/twine check dist/*
    - if: ${{ matrix.arch == 'x64' }}
      name: Publish sdist and x86_64 wheels to TestPyPi
      env:
        TWINE_NON_INTERACTIVE: 1
        TWINE_REPOSITORY: testpypi
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.SW_APM_TESTPYPI_UPLOAD_TOKEN }}
      run: /gh/.local/bin/twine upload dist/*
    - if: ${{ matrix.arch == 'arm64' }}
      name: Publish arm64 wheels to TestPyPi
      env:
        TWINE_NON_INTERACTIVE: 1
        TWINE_REPOSITORY: testpypi
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.SW_APM_TESTPYPI_UPLOAD_TOKEN }}
      run: /gh/.local/bin/twine upload dist/*

  terminate_arm64:
    name: Terminate ec2 instances
    if: ${{ always() }}
    needs:
      - launch_arm64
      - build_publish_sdist_and_wheels
    runs-on: ubuntu-latest
    steps:
      - uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.CI_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.CI_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      - uses: solarwindscloud/ec2-runner-action@main
        with:
          action: terminate
          github-token: ${{ secrets.CI_GITHUB_TOKEN }}
          matrix: ${{ needs.launch_arm64.outputs.matrix }}
