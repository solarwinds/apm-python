# Â© 2023 SolarWinds Worldwide, LLC. All rights reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License. You may obtain a copy of the License at:http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.

name: Publish to TestPyPi

on:
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

jobs:
  get_apm_python_version:
    name: Get APM Python version
    runs-on: ubuntu-latest
    outputs:
      SW_APM_VERSION: ${{ steps.save-apm-python-version.outputs.SW_APM_VERSION }}
    steps:
    - uses: actions/checkout@v4
    - name: grep version from Python src
      id: save-apm-python-version
      run: |
        echo "SW_APM_VERSION=$(grep __version__ ./solarwinds_apm/version.py | cut -d= -f 2 | tr -d ' "')" >> $GITHUB_OUTPUT

  build_publish_sdist_and_x86_64:
    name: Build and publish sdist and x86_64
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Build x86_64
      uses: ./.github/actions/package_solarwinds_apm_x86_64
    - name: Install Twine
      run: pip install --upgrade --no-cache-dir --prefer-binary twine
    - name: Check distribution artifacts
      run: twine check dist/*
    - name: Get APM Python version
      id: get-apm-version
      run: |
        APM_VERSION=$(grep __version__ solarwinds_apm/version.py | cut -d= -f 2 | tr -d ' "')
        echo "apm_version=$APM_VERSION" >> $GITHUB_OUTPUT
    - name: Package sdist and wheels for RL scan
      run: zip -r scan.zip dist/*
    - name: ReversingLabs scan
      id: rl-scan
      env:
        RLPORTAL_ACCESS_TOKEN: ${{ secrets.RLPORTAL_ACCESS_TOKEN }}
      uses: reversinglabs/gh-action-rl-scanner-cloud-only@v1
      with:
        artifact-to-scan: scan.zip
        rl-verbose: true
        rl-portal-server: solarwinds
        rl-portal-org: SolarWinds
        rl-portal-group: "SaaS-Agents-SWO"
        rl-package-url: apm-python/apm-python-pypi-sdist-x86_64@${{ steps.get-apm-version.outputs.apm_version }}
    - name: Report RL scan status
      if: success() || failure()
      run: |
        echo "The status is: '${{ steps.rl-scan.outputs.status }}'"
        echo "The description is: '${{ steps.rl-scan.outputs.description }}'"
    - name: Publish sdist and x86_64 wheels to TestPyPi
      env:
        TWINE_NON_INTERACTIVE: 1
        TWINE_REPOSITORY: testpypi
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.SW_APM_TESTPYPI_UPLOAD_TOKEN }}
      run: twine upload dist/*

  build_aarch64:
    name: Build aarch64
    needs: get_apm_python_version
    runs-on:
      group: apm-arm-runner
    outputs:
      artifact-name: scan-aarch64-${{ needs.get_apm_python_version.outputs.SW_APM_VERSION }}.zip
    steps:
      - uses: actions/checkout@v4
      - name: Build aarch64
        uses: ./.github/actions/package_solarwinds_apm_aarch64
      - name: Package sdist and wheels for upload
        run: zip -r scan-aarch64-${{ needs.get_apm_python_version.outputs.SW_APM_VERSION }}.zip dist/*
      - uses: actions/upload-artifact@v4
        name: Save zip for RL scan
        with:
          name: scan-aarch64-${{ needs.get_apm_python_version.outputs.SW_APM_VERSION }}.zip
          path: scan-aarch64-${{ needs.get_apm_python_version.outputs.SW_APM_VERSION }}.zip

  scan_aarch64:
    name: RL scan aarch64 build
    needs:
      - get_apm_python_version
      - build_aarch64
    uses: ./.github/workflows/reversinglabs_scan.yaml
    with:
      artifact-name: ${{ needs.build_aarch64.outputs.artifact-name }}
      package-name: apm-python-pypi-aarch64
      version: ${{ needs.get_apm_python_version.outputs.SW_APM_VERSION }}
    secrets: inherit

  publish_aarch64:
    name: Publish aarch64 to TestPyPI
    needs:
      - build_aarch64
      - scan_aarch64
    runs-on:
      group: apm-arm-runner
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: ${{ needs.build_aarch64.outputs.artifact-name }}
      - name: Unzip artifact with dist
        run: unzip ${{ needs.build_aarch64.outputs.artifact-name }}
      - name: Install Twine
        run: pip install --upgrade --no-cache-dir --prefer-binary twine
      - name: Check distribution artifacts
        run: twine check dist/*
      - name: Publish aarch64 wheels to TestPyPi
        env:
          TWINE_NON_INTERACTIVE: 1
          TWINE_REPOSITORY: testpypi
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.SW_APM_TESTPYPI_UPLOAD_TOKEN }}
        run: twine upload dist/*.whl
